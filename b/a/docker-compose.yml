version: '3.8'

services:
  # PostgreSQL Database LOCAL
  postgres:
    image: postgres:16-alpine
    container_name: jwt-auth-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: jwt_auth_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - jwt-auth-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # pgAdmin - Web UI for PostgreSQL LOCAL
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: jwt-auth-pgadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - jwt-auth-network

  # API conectada ao PostgreSQL LOCAL (porta 3001)
  app-local:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jwt-auth-app-local
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_TYPE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres123
      DB_DATABASE: jwt_auth_db
      JWT_SECRET: ${JWT_SECRET:-e64c60b2ce4429ceb041a6f19058f726f55f0eb56b452fcba2ac4e32957fa5c9}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      BCRYPT_SALT_ROUNDS: ${BCRYPT_SALT_ROUNDS:-12}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - jwt-auth-network
    volumes:
      - logs:/app/logs

  # API conectada ao PostgreSQL na NUVEM (porta 3002)
  app-cloud:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jwt-auth-app-cloud
    restart: unless-stopped
    ports:
      - "3002:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET:-e64c60b2ce4429ceb041a6f19058f726f55f0eb56b452fcba2ac4e32957fa5c9}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      BCRYPT_SALT_ROUNDS: ${BCRYPT_SALT_ROUNDS:-12}
    networks:
      - jwt-auth-network
    volumes:
      - logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  jwt-auth-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  logs:
    driver: local
