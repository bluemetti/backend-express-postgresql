{
  "info": {
    "name": "JWT Auth Backend API",
    "description": "Collection para testar a API de autenticação JWT desenvolvida em Node.js TypeScript",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "01. Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        }
      },
      "response": []
    },
    {
      "name": "02. Register User - Success",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"João Silva\",\n  \"email\": \"joao.silva@email.com\",\n  \"password\": \"senha123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/register",
          "host": ["{{baseUrl}}"],
          "path": ["register"]
        }
      },
      "response": []
    },
    {
      "name": "03. Register User - Duplicate Email",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Maria Santos\",\n  \"email\": \"joao.silva@email.com\",\n  \"password\": \"outrasenha123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/register",
          "host": ["{{baseUrl}}"],
          "path": ["register"]
        }
      },
      "response": []
    },
    {
      "name": "04. Register User - Invalid Password",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Pedro Costa\",\n  \"email\": \"pedro.costa@email.com\",\n  \"password\": \"123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/register",
          "host": ["{{baseUrl}}"],
          "path": ["register"]
        }
      },
      "response": []
    },
    {
      "name": "05. Register User - Invalid Email",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Ana Oliveira\",\n  \"email\": \"email-invalido\",\n  \"password\": \"senha123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/register",
          "host": ["{{baseUrl}}"],
          "path": ["register"]
        }
      },
      "response": []
    },
    {
      "name": "06. Login - Success",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Login successful\", function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.collectionVariables.set(\"token\", jsonData.data.token);",
              "    console.log(\"Token saved:\", jsonData.data.token.substring(0, 20) + \"...\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"joao.silva@email.com\",\n  \"password\": \"senha123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/login",
          "host": ["{{baseUrl}}"],
          "path": ["login"]
        }
      },
      "response": []
    },
    {
      "name": "07. Login - Invalid Password",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"joao.silva@email.com\",\n  \"password\": \"senhaerrada\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/login",
          "host": ["{{baseUrl}}"],
          "path": ["login"]
        }
      },
      "response": []
    },
    {
      "name": "08. Login - Invalid Email",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"email-inexistente@test.com\",\n  \"password\": \"senha123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/login",
          "host": ["{{baseUrl}}"],
          "path": ["login"]
        }
      },
      "response": []
    },
    {
      "name": "09. Protected Route - With Valid Token",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/protected",
          "host": ["{{baseUrl}}"],
          "path": ["protected"]
        }
      },
      "response": []
    },
    {
      "name": "10. Protected Route - Without Token",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/protected",
          "host": ["{{baseUrl}}"],
          "path": ["protected"]
        }
      },
      "response": []
    },
    {
      "name": "11. Protected Route - Invalid Token",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer token-invalido-12345"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/protected",
          "host": ["{{baseUrl}}"],
          "path": ["protected"]
        }
      },
      "response": []
    }
  ]
}
